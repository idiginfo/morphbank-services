/*******************************************************************************
 * Copyright (c) 2011 Greg Riccardi, Guillaume Jimenez.
 *  All rights reserved. This program and the accompanying materials
 *  are made available under the terms of the GNU Public License v2.0
 *  which accompanies this distribution, and is available at
 *  http://www.gnu.org/licenses/old-licenses/gpl-2.0.html
 *  
 *  Contributors:
 *  	Greg Riccardi - initial API and implementation
 * 	Guillaume Jimenez - initial API and implementation
 ******************************************************************************/
package net.morphbank.mbsvc3.xml;

import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlElements;
import javax.xml.bind.annotation.XmlType;

@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(propOrder = { "submitter", "requestSummary", "status", "numberAffected", "numMatches",
		"numReturned", "firstReturned", "objects" })
public class ObjectList {
	//
	// This file was generated by the JavaTM Architecture for XML Binding(JAXB)
	// Reference Implementation, vJAXB 2.0 in JDK 1.6
	// See <a
	// href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a>
	// Any modifications to this file will be lost upon recompilation of the
	// source schema.
	// Generated on: 2008.02.11 at 04:28:24 PM EST
	//

	protected Credentials submitter;
	@XmlElements( { @XmlElement(name = "object", type = XmlBaseObject.class) })
	protected List<Object> objects;
	@XmlElement
	protected RequestSummary requestSummary;
	@XmlElement
	protected String status;
	@XmlElement(required = false)
	protected Long numberAffected;
	@XmlElement(required = false)
	protected Integer numMatches;
	@XmlElement(required = false)
	protected Integer numReturned;
	@XmlElement(required = false)
	protected Integer firstReturned;

	public ObjectList() {
		getObjects();
	}

	public Credentials getSubmitter() {
		return submitter;
	}

	public void setSubmitter(Credentials submitter) {
		this.submitter = submitter;
	}

	/**
	 * Gets the value of the objects property.
	 * 
	 * <p>
	 * This accessor method returns a reference to the live list, not a
	 * snapshot. Therefore any modification you make to the returned list will
	 * be present inside the JAXB object. This is why there is not a
	 * <CODE>set</CODE> method for the taxonOrSpecimenOrView property.
	 * 
	 * <p>
	 * For example, to add a new item, do as follows:
	 * 
	 * <pre>
	 * getTaxonOrSpecimenOrView().add(newItem);
	 * </pre>
	 * 
	 * 
	 * <p>
	 * Objects of the following type(s) are allowed in the list {@link XmlView }
	 * {@link XmlSpecimen } {@link XmlImage } {@link XmlTaxon }
	 * 
	 * 
	 */
	public List<Object> getObjects() {
		if (objects == null) {
			objects = new ArrayList<Object>();
		}
		return this.objects;
	}

	// methods to enhance usability

	public List<Object> getXmlObjectList() {
		return getObjects();
	}

	public XmlBaseObject getObject(XmlId sourceId) {
		List xmlObjectList = getObjects();
		if (xmlObjectList == null) {
			return null;
		}
		Iterator xmlObjects = xmlObjectList.iterator();
		while (xmlObjects.hasNext()) {
			XmlBaseObject object = (XmlBaseObject) xmlObjects.next();
			if (object.hasId(sourceId)) {
				return object;
			}
		}
		return null;
	}

	public XmlBaseObject getSpecimen(XmlId sourceXmlId) {
		// TODO remove this object
		XmlBaseObject object = getObject(sourceXmlId);
		String objectTypeId = object.getObjectTypeId();
		if (objectTypeId != null && objectTypeId == "Specimen") {
			return (XmlBaseObject) object;
		}
		return null;
	}

	public XmlBaseObject getObjectByMorphbankId(Integer id) {
		XmlId sourceId = new XmlId();
		sourceId.setMorphbank(id);
		return getObject(sourceId);
	}

	public XmlBaseObject getObjectByMorphbankId(String id) {
		XmlId sourceId = new XmlId();
		try {
			Integer idInteger = new Integer(id);
			sourceId.setMorphbank(idInteger);
			return getObject(sourceId);
		} catch (NumberFormatException e) {
			return null;
		}
	}

	public XmlBaseObject getObjectByLocalId(String id) {
		XmlId sourceId = new XmlId();
		sourceId.setLocal(id);
		return getObject(sourceId);
	}

	public XmlBaseObject getObjectByExternalId(String id) {
		XmlId sourceId = new XmlId();
		sourceId.getExternal().add(id);
		return getObject(sourceId);
	}

	public XmlBaseObject getObjectByURI(String uri) {
		XmlId sourceId = new XmlId();
		sourceId.addURI(uri);
		return getObject(sourceId);
	}

	public RequestSummary getRequestSummary() {
		return requestSummary;
	}

	public void setRequestSummary(RequestSummary value) {
		this.requestSummary = value;
	}

	public String getStatus() {
		return status;
	}

	public void setStatus(String value) {
		this.status = value;
	}

	public long getNumberAffected() {
		return numberAffected;
	}

	public void setNumberAffected(long value) {
		this.numberAffected = value;
	}

	public void setNumberAffected(Long value) {
		this.numberAffected = value;
	}

	public Integer getNumMatches() {
		return numMatches;
	}

	public void setNumMatches(Integer numMatches) {
		this.numMatches = numMatches;
	}

	public Integer getNumReturned() {
		return numReturned;
	}

	public void setNumReturned(Integer numReturned) {
		this.numReturned = numReturned;
	}

	public Integer getFirstReturned() {
		return firstReturned;
	}

	public void setFirstReturned(Integer firstReturned) {
		this.firstReturned = firstReturned;
	}

}
